<IF> : if
<LEFT_ROUND_B> : (
<ID> : x
<EQUAL> : =
<INTEGRAL_LITERAL> : 5
<RIGHT_ROUND_B> : )
<SEMICOLON> : ;
<INT> : int
<ID> : y5n
<EQUAL> : =
<INTEGRAL_LITERAL> : 54
<SEMICOLON> : ;
<FLOAT> : float
<ID> : z
<EQUAL> : =
<FLOAT_LITERAL> : 34.15
<SEMICOLON> : ;
<PUBLIC> : public
<CLASS> : class
<ID> : class_name
<EXTENDS> : extends
<ID> : java
<DOT> : .
<ID> : io
<LEFT_CURLY_B> : {
<VOID> : void
<ID> : function
<LEFT_ROUND_B> : (
<RIGHT_ROUND_B> : )
<LEFT_CURLY_B> : {
<STRING> : string
<ID> : str
<EQUAL> : =
<STRING_LITERAL> : "hello"
<SEMICOLON> : ;
<RIGHT_CURLY_B> : }
<RIGHT_CURLY_B> : }
<ID> : y
<MULTIPLY> : *
<ID> : x
<DIVITION> : /
<INTEGRAL_LITERAL> : 23
<SEMICOLON> : ;
<WHILE> : while
<LEFT_ROUND_B> : (
<ID> : moh
<AND> : &&
<ID> : sos
<OR> : ||
<ID> : tot
<RIGHT_ROUND_B> : )
